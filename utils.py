fault_decrition_baseline = [
    {'Description': 'A/C feed ratio, B composition constant (stream 4)', 
     'TPR Baseline': 0.994},
    {'Description': 'B composition, A/C ration constant (stream 4)',
     'TPR Baseline': 0.997},
    {'Description': 'D feed temperature (stream 2)',
     'TPR Baseline': 0.992},
    {'Description': 'Reactor cooling water inlet temperature',
     'TPR Baseline': 0.972},
    {'Description': 'Condenser cooling water inlet temperature',
     'TPR Baseline': 0.998},
    {'Description': 'A feed loss (stream 1)', 'TPR Baseline': 0.992},
    {'Description': 'C header pressure loss - reduced availability',
     'TPR Baseline': 0.999},
    {'Description': 'A, B, C feed composition (stream 4)',
     'TPR Baseline': 0.998},
    {'Description': 'D feed temperature (stream 2)',
     'TPR Baseline': 0.983},
    {'Description': 'C feed temperature (stream 4)',
     'TPR Baseline': 0.735},
    {'Description': 'Reactor cooling water inlet temperature',
     'TPR Baseline': 0.979},
    {'Description': 'Condenser cooling water inlet temperature',
     'TPR Baseline': 0.99},
    {'Description': 'Reaction kinetics', 'TPR Baseline': 0.984},
    {'Description': 'Reactor cooling water valve',
     'TPR Baseline': 0.969},
    {'Description': 'Condencer cooling water valve',
     'TPR Baseline': 0.996},
    {'Description': 'Unknown', 'TPR Baseline': 0.357},
    {'Description': 'Unknown', 'TPR Baseline': 0.833},
    {'Description': 'Unknown', 'TPR Baseline': 0.979},
    {'Description': 'Unknown', 'TPR Baseline': 0.964},
    {'Description': 'Unknown', 'TPR Baseline': 0.992},
    {'Description': 'A feed (stream 1) temperature',
     'TPR Baseline': 0.971},
    {'Description': 'E feed (stream 3) temperature',
     'TPR Baseline': 0.0},
    {'Description': 'A feed flow (stream 1)', 'TPR Baseline': 0.501},
    {'Description': 'D feed flow (stream 2)', 'TPR Baseline': 0.94},
    {'Description': 'E feed flow (stream 3)', 'TPR Baseline': 0.985},
    {'Description': 'A and C feed flow (stream 4)',
     'TPR Baseline': 0.987},
    {'Description': 'Reactor cooling water flow',
     'TPR Baseline': 0.983},
    {'Description': 'Condenser cooling water flow',
     'TPR Baseline': 0.992},
    ]


def get_baseline_metrics():
    result = []
    for i in range(28):
        name = fault_decrition_baseline[i]
        name['Fault â„–'] = i + 1
        name['TPR New'] = name['TPR Baseline']
        name['Diff'] = 0.0
        result.append(name)
    return result

nodes_description = [
    {'node_id' : 1, 'color':0, 'shape':0},
    {'node_id' : 2, 'color':0, 'shape':0},
    {'node_id' : 3, 'color':0, 'shape':0},
    {'node_id' : 4, 'color':0, 'shape':0},
    {'node_id' : 5, 'color':0, 'shape':0},
    {'node_id' : 6, 'color':0, 'shape':0},
    {'node_id' : 7, 'color':1, 'shape':0},
    {'node_id' : 8, 'color':2, 'shape':0},
    {'node_id' : 9, 'color':3, 'shape':0},
    {'node_id' : 10, 'color':0, 'shape':0},
    {'node_id' : 11, 'color':3, 'shape':0},
    {'node_id' : 12, 'color':2, 'shape':0},
    {'node_id' : 13, 'color':1, 'shape':0},
    {'node_id' : 14, 'color':0, 'shape':0},
    {'node_id' : 15, 'color':2, 'shape':0},
    {'node_id' : 16, 'color':1, 'shape':0},
    {'node_id' : 17, 'color':0, 'shape':0},
    {'node_id' : 18, 'color':3, 'shape':0},
    {'node_id' : 19, 'color':0, 'shape':0},
    {'node_id' : 20, 'color':5, 'shape':0},
    {'node_id' : 21, 'color':3, 'shape':0},
    {'node_id' : 22, 'color':3, 'shape':0},
    {'node_id' : 23, 'color':4, 'shape':0},
    {'node_id' : 24, 'color':4, 'shape':0},
    {'node_id' : 25, 'color':4, 'shape':0},
    {'node_id' : 26, 'color':4, 'shape':0},
    {'node_id' : 27, 'color':4, 'shape':0},
    {'node_id' : 28, 'color':4, 'shape':0},
    {'node_id' : 29, 'color':4, 'shape':0},
    {'node_id' : 30, 'color':4, 'shape':0},
    {'node_id' : 31, 'color':4, 'shape':0},
    {'node_id' : 32, 'color':4, 'shape':0},
    {'node_id' : 33, 'color':4, 'shape':0},
    {'node_id' : 34, 'color':4, 'shape':0},
    {'node_id' : 35, 'color':4, 'shape':0},
    {'node_id' : 36, 'color':4, 'shape':0},
    {'node_id' : 37, 'color':4, 'shape':0},
    {'node_id' : 38, 'color':4, 'shape':0},
    {'node_id' : 39, 'color':4, 'shape':0},
    {'node_id' : 40, 'color':4, 'shape':0},
    {'node_id' : 41, 'color':0, 'shape':1},
    {'node_id' : 42, 'color':0, 'shape':1},
    {'node_id' : 43, 'color':0, 'shape':1},
    {'node_id' : 44, 'color':0, 'shape':1},
    {'node_id' : 45, 'color':0, 'shape':1},
    {'node_id' : 46, 'color':0, 'shape':1},
    {'node_id' : 47, 'color':0, 'shape':1},
    {'node_id' : 48, 'color':0, 'shape':1},
    {'node_id' : 49, 'color':0, 'shape':1},
    {'node_id' : 50, 'color':0, 'shape':1},
    {'node_id' : 51, 'color':0, 'shape':1},
    {'node_id' : 52, 'color':0, 'shape':1},
]

colors = {0: 'rgb(113, 186, 255)', 1: 'rgb(51, 153, 0)', 2: 'rgb(255, 213, 0)', 3: 'rgb(255, 109, 84)', 4: 'rgb(153, 113, 194)', 5: 'rgb(192, 192, 192)'}
shapes = {0: 'box', 1: 'dot'}

def get_node_color_and_shape(node_id):
    return (colors[nodes_description[node_id]['color']], shapes[nodes_description[node_id]['shape']])